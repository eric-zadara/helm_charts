{{- if .Values.enabled }}
{{- $fullName := include "convenience-ingress.fullname" . -}}
{{- $namespace := include "convenience-ingress.namespace" . -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  namespace: {{ $namespace }}
  labels:
    {{- include "convenience-ingress.labels" . | nindent 4 }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if and .Values.middleware.enabled (or .Values.middleware.middlewares .Values.middleware.stripPrefix.enabled .Values.middleware.addPrefix.enabled .Values.middleware.replacePathRegex.enabled) }}
    {{- $namespace := include "convenience-ingress.namespace" . -}}
    {{- $middlewareBaseName := include "convenience-ingress.middlewareName" . -}}
    {{- $middlewareList := list -}}
    {{- /* Add middlewares from the new array-based configuration */}}
    {{- range .Values.middleware.middlewares -}}
    {{- $middlewareFullName := printf "%s-%s-%s@kubernetescrd" $.Release.Namespace $middlewareBaseName .name -}}
    {{- $middlewareList = append $middlewareList $middlewareFullName -}}
    {{- end -}}
    {{- /* Add legacy middlewares for backward compatibility */}}
    {{- if .Values.middleware.stripPrefix.enabled -}}
    {{- $stripPrefixName := .Values.middleware.stripPrefixName | default (printf "%s-stripprefix" $middlewareBaseName) -}}
    {{- $middlewareList = append $middlewareList (printf "%s-%s@kubernetescrd" $namespace $stripPrefixName) -}}
    {{- end -}}
    {{- if .Values.middleware.addPrefix.enabled -}}
    {{- $addPrefixName := .Values.middleware.addPrefixName | default (printf "%s-addprefix" $middlewareBaseName) -}}
    {{- $middlewareList = append $middlewareList (printf "%s-%s@kubernetescrd" $namespace $addPrefixName) -}}
    {{- end -}}
    {{- if .Values.middleware.replacePathRegex.enabled -}}
    {{- $replacePathRegexName := .Values.middleware.replacePathRegexName | default (printf "%s-replacepathregex" $middlewareBaseName) -}}
    {{- $middlewareList = append $middlewareList (printf "%s-%s@kubernetescrd" $namespace $replacePathRegexName) -}}
    {{- end -}}
    {{- if $middlewareList }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ join "," $middlewareList | quote }}
    {{- end }}
    {{- end }}
spec:
  {{- if .Values.ingressClassName }}
  ingressClassName: {{ .Values.ingressClassName }}
  {{- end }}
  {{- if .Values.tls }}
  tls:
    {{- range .Values.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      {{- with .secretName }}
      secretName: {{ . }}
      {{- end }}
    {{- end }}
  {{- end }}
  rules:
    {{- if .Values.host }}
    {{- /* If host is specified, create a rule for that specific host with all paths */}}
    - host: {{ .Values.host | quote }}
      http:
        paths:
          {{- if .Values.rules }}
          {{- range .Values.rules }}
          - path: {{ .path }}
            pathType: {{ .pathType | default "Prefix" }}
            backend:
              service:
                name: {{ .service.name }}
                port:
                  number: {{ .service.port.number }}
          {{- end }}
          {{- else }}
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chart-example-svc
                port:
                  number: 80
          {{- end }}
    {{- else }}
    {{- /* If no host is specified, create a catch-all rule with all paths */}}
    - http:
        paths:
          {{- if .Values.rules }}
          {{- range .Values.rules }}
          - path: {{ .path }}
            pathType: {{ .pathType | default "Prefix" }}
            backend:
              service:
                name: {{ .service.name }}
                port:
                  number: {{ .service.port.number }}
          {{- end }}
          {{- else }}
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chart-example-svc
                port:
                  number: 80
          {{- end }}
    {{- end }}
{{- end }}