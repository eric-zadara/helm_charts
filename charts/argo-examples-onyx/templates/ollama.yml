{{ $chartName := "ollama" }}
{{ $repoURL := "https://helm.otwld.com/" }}
{{ $appConfig := merge (index $.Values $chartName) $.Values.common }}
{{- if ne $appConfig.enabled false }}
{{ $argoConfig := merge (default $appConfig.argocdApps (dict)) $.Values.argocdApps }}
{{ $appName := default $chartName $appConfig.nameOverride }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $appName }}
  namespace: {{ $argoConfig.namespace }}
  annotations: {{ toYaml $argoConfig.annotations | nindent 4 }}
spec:
  project: {{ $argoConfig.project }}
  destination:
    namespace: {{ default $appName $appConfig.namespace }}
    server: {{ $argoConfig.destination.server }}
  syncPolicy: {{ toYaml $argoConfig.syncPolicy | nindent 4 }}
  source: 
    repoURL: {{ $repoURL }}
    chart: {{ $chartName }}
    targetRevision: {{ $appConfig.targetRevision }}
    helm:
      valuesObject:
{{- if $appConfig.helmConfig }}
{{ toYaml $appConfig.helmConfig | indent 8 }}
{{- else }}
        ollama:
          gpu:
            enabled: true
            type: nvidia
          models:
            pull: {{ toYaml $appConfig.config.models | nindent 14 }}
            run:
              - {{ $appConfig.config.models | first }}
        replicaCount: {{ $appConfig.redundancy.replicas }}
        extraEnv:
{{- range $appConfig.extraEnv }}
          - name: "{{ .name }}"
            value: "{{ .value }}"
{{- end }}
          - name: "OLLAMA_MODELS"
            value: "{{ $appConfig.modelPath }}"
        resources: {{ toYaml $appConfig.resources | nindent 10 }}
        persistentVolume:
          enabled: false
        runtimeClassName: nvidia
        affinity: {{ toYaml $appConfig.affinity | nindent 10 }}
        volumeMounts:
          - mountPath: {{ $appConfig.modelPath }}
            name: ollama-models
        volumes:
          - name: ollama-models
            hostPath:
              path: {{ $appConfig.modelPath }}
              type: DirectoryOrCreate
{{- end }}
{{- end }}
